---
version: "3"


vars:
  SSH_KEY: ~/.ssh/digital-ocean/id_rsa.pub
  SSH_PRIVATE_KEY: ~/.ssh/digital-ocean/id_rsa

tasks:
  plan:
    description: Plan the Digital Ocean infrastructure
    dir: infrastructure/terraform/digitalocean
    cmds:
      - sops -d creds.sops.yaml > creds.yaml
      - defer: rm creds.yaml
      - export TF_VAR_do_token=$(yq -r '.token' < creds.yaml) &&
        export TF_VAR_do_homelab_ssh_key={{.SSH_KEY}} &&
        terraform init &&
        terraform plan
    preconditions:
      - sh: test -f {{.SSH_KEY}}
        msg: |
          SSH key not found. Please create a keypair and set the SSH_KEY environment variable.

  apply:
    description: Apply the Digital Ocean infrastructure
    dir: infrastructure/terraform/digitalocean
    cmds:
      - sops -d creds.sops.yaml > creds.yaml
      - defer: rm creds.yaml
      - export TF_VAR_do_token=$(yq -r '.token' < creds.yaml) &&
        export TF_VAR_do_homelab_ssh_key={{.SSH_KEY}} &&
        terraform init &&
        terraform apply -auto-approve
    preconditions:
      - sh: test -f {{.SSH_KEY}}
        msg: |
          SSH key not found. Please create a keypair and set the SSH_KEY environment variable.

  output:
    description: Output the ip address to ansible hosts file and encrypt it
    dir: infrastructure/terraform/digitalocean
    cmds:
      - sops -d creds.sops.yaml > creds.yaml
      - defer: rm creds.yaml
      - sops -d --in-place ../../ansible/inventory/hosts.sops.yaml
      - export TF_VAR_do_token=$(yq -r '.token' < creds.yaml) &&
        export TF_VAR_do_homelab_ssh_key={{.SSH_KEY}} &&
        terraform output | awk '{ print $3 }' | sed "s/\"//g" | xargs -I {} yq e -i '.all.children.kubernetes.children.master.hosts.kratos.ansible_host = "{}"' ../../ansible/inventory/hosts.sops.yaml
      - sops -e --in-place ../../ansible/inventory/hosts.sops.yaml
      # Decrypt the host_vars file, update the ansible_ssh_private_key_file and encrypt it back
      - sops -d --in-place ../../ansible/inventory/host_vars/kratos.sops.yaml
      - echo '{{.SSH_PRIVATE_KEY}}' | xargs -I {} yq e -i '.ansible_ssh_private_key_file = "{}"' ../../ansible/inventory/host_vars/kratos.sops.yaml
      - sops -e --in-place ../../ansible/inventory/host_vars/kratos.sops.yaml

    preconditions:
      - sh: test -f {{.SSH_KEY}}
        msg: |
          SSH key not found. Please create a keypair and set the SSH_KEY environment variable.

  destroy:
    description: Destroy the Digital Ocean infrastructure
    dir: infrastructure/terraform/digitalocean
    cmds:
      - sops -d creds.sops.yaml > creds.yaml
      - defer: rm creds.yaml
      - export TF_VAR_do_token=$(yq -r '.token' < creds.yaml) &&
        export TF_VAR_do_homelab_ssh_key={{.SSH_KEY}} &&
        terraform init &&
        terraform destroy -auto-approve
    preconditions:
      - sh: test -f {{.SSH_KEY}}
        msg: |
          SSH key not found. Please create a keypair and set the SSH_KEY environment variable.
